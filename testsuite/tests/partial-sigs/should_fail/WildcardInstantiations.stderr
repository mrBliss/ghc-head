
WildcardInstantiations.hs:5:14:
    Found hole ‘_a’ with type: w_a
    Where: ‘w_a’ is a rigid type variable bound by
                 the inferred type of foo :: (Show w_a, Enum w_a) => w_a -> String
                 at WildcardInstantiations.hs:6:1
    To use the inferred type, enable PartialTypeSignatures
    In the type signature for ‘foo’: foo :: (Show _a, _) => _a -> _

WildcardInstantiations.hs:5:18:
    Found hole ‘_’ with inferred constraints: (Enum w_a)
    Where: ‘w_a’ is a rigid type variable bound by
                 the inferred type of foo :: (Show w_a, Enum w_a) => w_a -> String
                 at WildcardInstantiations.hs:6:1
    To use the inferred type, enable PartialTypeSignatures
    In the type signature for ‘foo’: foo :: (Show _a, _) => _a -> _

WildcardInstantiations.hs:5:24:
    Found hole ‘_a’ with type: w_a
    Where: ‘w_a’ is a rigid type variable bound by
                 the inferred type of foo :: (Show w_a, Enum w_a) => w_a -> String
                 at WildcardInstantiations.hs:6:1
    To use the inferred type, enable PartialTypeSignatures
    In the type signature for ‘foo’: foo :: (Show _a, _) => _a -> _

WildcardInstantiations.hs:5:30:
    Found hole ‘_’ with type: String
    To use the inferred type, enable PartialTypeSignatures
    In the type signature for ‘foo’: foo :: (Show _a, _) => _a -> _

WildcardInstantiations.hs:8:8:
    Found hole ‘_’ with type: w_
    Where: ‘w_’ is a rigid type variable bound by
                the inferred type of bar :: w_ -> (w_ -> w_1) -> w_1
                at WildcardInstantiations.hs:9:1
    To use the inferred type, enable PartialTypeSignatures
    In the type signature for ‘bar’: bar :: _ -> _ -> _

WildcardInstantiations.hs:8:13:
    Found hole ‘_’ with type: w_ -> w_1
    Where: ‘w_’ is a rigid type variable bound by
                the inferred type of bar :: w_ -> (w_ -> w_1) -> w_1
                at WildcardInstantiations.hs:9:1
           ‘w_1’ is a rigid type variable bound by
                 the inferred type of bar :: w_ -> (w_ -> w_1) -> w_1
                 at WildcardInstantiations.hs:9:1
    To use the inferred type, enable PartialTypeSignatures
    In the type signature for ‘bar’: bar :: _ -> _ -> _

WildcardInstantiations.hs:8:18:
    Found hole ‘_’ with type: w_1
    Where: ‘w_1’ is a rigid type variable bound by
                 the inferred type of bar :: w_ -> (w_ -> w_1) -> w_1
                 at WildcardInstantiations.hs:9:1
    To use the inferred type, enable PartialTypeSignatures
    In the type signature for ‘bar’: bar :: _ -> _ -> _
